/*
  Warnings:

  - You are about to drop the `User` table. If the table is not empty, all the data it contains will be lost.

*/
-- DropTable
DROP TABLE "User";

-- CreateTable
CREATE TABLE "Passenger" (
    "USER_ID" SERIAL NOT NULL,
    "F_NAME" TEXT NOT NULL,
    "L_NAME" TEXT NOT NULL,
    "GENDER" TEXT NOT NULL,
    "EMAIL_ID" TEXT NOT NULL,
    "MOBILE_NO" TEXT NOT NULL,
    "OVERALL_RATING" INTEGER,
    "REQ_ID" INTEGER NOT NULL,
    "CANCEL_ID" INTEGER NOT NULL,
    "PAYMENT_ID" INTEGER NOT NULL,

    CONSTRAINT "Passenger_pkey" PRIMARY KEY ("USER_ID")
);

-- CreateTable
CREATE TABLE "Driver" (
    "DRIVER_ID" SERIAL NOT NULL,
    "FIRSTNAME" TEXT NOT NULL,
    "LASTNAME" TEXT NOT NULL,
    "GENDER" TEXT NOT NULL,
    "EMAIL_ID" TEXT NOT NULL,
    "MOBILE_NO" TEXT NOT NULL,
    "AVG_RATING" DOUBLE PRECISION NOT NULL DEFAULT 5.0,
    "PASSWORD" TEXT NOT NULL,
    "DL_NUM" TEXT NOT NULL,
    "REQ_ID" INTEGER NOT NULL,
    "TRIP_ID" INTEGER NOT NULL,
    "CANCEL_ID" INTEGER NOT NULL,

    CONSTRAINT "Driver_pkey" PRIMARY KEY ("DRIVER_ID")
);

-- CreateTable
CREATE TABLE "Car" (
    "DRIVER_ID" INTEGER NOT NULL,
    "CAR_NUM" TEXT NOT NULL,
    "MODEL" TEXT NOT NULL,
    "MAKE" TEXT NOT NULL,
    "YEAR" INTEGER NOT NULL,
    "CAPACITY" INTEGER NOT NULL,
    "COLOR" TEXT,

    CONSTRAINT "Car_pkey" PRIMARY KEY ("CAR_NUM")
);

-- CreateTable
CREATE TABLE "Request" (
    "REQ_ID" SERIAL NOT NULL,
    "USER_ID" INTEGER NOT NULL,
    "DRIVER_ID" INTEGER NOT NULL,
    "TRIP_ID" INTEGER NOT NULL,
    "SURGE" DOUBLE PRECISION NOT NULL,
    "TIMESTAMP" TIMESTAMP(3) NOT NULL,
    "RIDE_TYPE" TEXT NOT NULL,
    "PICKUP_LOC" TEXT NOT NULL,
    "DROPOFF_LOC" TEXT NOT NULL,
    "ESTIMATE_FARE" DOUBLE PRECISION NOT NULL,
    "SEATS" INTEGER NOT NULL,
    "CANCEL_ID" INTEGER NOT NULL,

    CONSTRAINT "Request_pkey" PRIMARY KEY ("REQ_ID")
);

-- CreateTable
CREATE TABLE "Trip" (
    "TRIP_ID" SERIAL NOT NULL,
    "START_TIME" TIMESTAMP(3) NOT NULL,
    "DURATION" INTEGER NOT NULL,
    "FARE" DOUBLE PRECISION NOT NULL,
    "TIP" DOUBLE PRECISION NOT NULL,
    "DRIVER_RATING" INTEGER NOT NULL,
    "PASSENGER_RATING" INTEGER NOT NULL,
    "COMMENTS" TEXT,
    "REQ_ID" INTEGER NOT NULL,
    "DRIVER_ID" INTEGER NOT NULL,

    CONSTRAINT "Trip_pkey" PRIMARY KEY ("TRIP_ID")
);

-- CreateTable
CREATE TABLE "Paytm" (
    "PAYTM_ID" SERIAL NOT NULL,
    "ACCOUNT_HOLDER_NAME" TEXT NOT NULL,

    CONSTRAINT "Paytm_pkey" PRIMARY KEY ("PAYTM_ID")
);

-- CreateTable
CREATE TABLE "Payment" (
    "PAYMENT_ID" SERIAL NOT NULL,
    "CARD_NUM" TEXT NOT NULL,
    "GIFT_CARD_NUM" TEXT NOT NULL,
    "EXPIRY_DATE" TIMESTAMP(3) NOT NULL,
    "AMOUNT" DOUBLE PRECISION NOT NULL,
    "PAYTM_ID" INTEGER NOT NULL,
    "USER_ID" INTEGER NOT NULL,

    CONSTRAINT "Payment_pkey" PRIMARY KEY ("PAYMENT_ID")
);

-- CreateTable
CREATE TABLE "GiftCard" (
    "GIFT_CARD_NUM" TEXT NOT NULL,
    "EXPIRY_DATE" TIMESTAMP(3) NOT NULL,
    "AMOUNT" DOUBLE PRECISION NOT NULL,

    CONSTRAINT "GiftCard_pkey" PRIMARY KEY ("GIFT_CARD_NUM")
);

-- CreateTable
CREATE TABLE "Card" (
    "CARD_NUM" TEXT NOT NULL,
    "NAME" TEXT NOT NULL,
    "EXPIRY_DATE" TIMESTAMP(3) NOT NULL,
    "TYPE" TEXT NOT NULL,

    CONSTRAINT "Card_pkey" PRIMARY KEY ("CARD_NUM")
);

-- CreateTable
CREATE TABLE "Cancel" (
    "CANCEL_ID" SERIAL NOT NULL,
    "CANCEL_TIME" TIMESTAMP(3) NOT NULL,
    "PENALTY" DOUBLE PRECISION NOT NULL,
    "CANCELED_BY" INTEGER NOT NULL,
    "REASON" TEXT,
    "USER_ID" INTEGER NOT NULL,
    "DRIVER_ID" INTEGER NOT NULL,
    "REQ_ID" INTEGER NOT NULL,

    CONSTRAINT "Cancel_pkey" PRIMARY KEY ("CANCEL_ID")
);

-- CreateIndex
CREATE UNIQUE INDEX "Passenger_REQ_ID_key" ON "Passenger"("REQ_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Passenger_CANCEL_ID_key" ON "Passenger"("CANCEL_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Passenger_PAYMENT_ID_key" ON "Passenger"("PAYMENT_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Driver_REQ_ID_key" ON "Driver"("REQ_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Driver_TRIP_ID_key" ON "Driver"("TRIP_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Driver_CANCEL_ID_key" ON "Driver"("CANCEL_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Request_DRIVER_ID_key" ON "Request"("DRIVER_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Request_TRIP_ID_key" ON "Request"("TRIP_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Request_CANCEL_ID_key" ON "Request"("CANCEL_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Trip_REQ_ID_key" ON "Trip"("REQ_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Trip_DRIVER_ID_key" ON "Trip"("DRIVER_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Payment_CARD_NUM_key" ON "Payment"("CARD_NUM");

-- CreateIndex
CREATE UNIQUE INDEX "Cancel_CANCEL_TIME_key" ON "Cancel"("CANCEL_TIME");

-- CreateIndex
CREATE UNIQUE INDEX "Cancel_USER_ID_key" ON "Cancel"("USER_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Cancel_DRIVER_ID_key" ON "Cancel"("DRIVER_ID");

-- CreateIndex
CREATE UNIQUE INDEX "Cancel_REQ_ID_key" ON "Cancel"("REQ_ID");

-- AddForeignKey
ALTER TABLE "Request" ADD CONSTRAINT "Request_USER_ID_fkey" FOREIGN KEY ("USER_ID") REFERENCES "Passenger"("REQ_ID") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Request" ADD CONSTRAINT "Request_DRIVER_ID_fkey" FOREIGN KEY ("DRIVER_ID") REFERENCES "Driver"("REQ_ID") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Request" ADD CONSTRAINT "Request_TRIP_ID_fkey" FOREIGN KEY ("TRIP_ID") REFERENCES "Trip"("REQ_ID") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Trip" ADD CONSTRAINT "Trip_DRIVER_ID_fkey" FOREIGN KEY ("DRIVER_ID") REFERENCES "Driver"("TRIP_ID") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Payment" ADD CONSTRAINT "Payment_USER_ID_fkey" FOREIGN KEY ("USER_ID") REFERENCES "Passenger"("PAYMENT_ID") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Cancel" ADD CONSTRAINT "Cancel_USER_ID_fkey" FOREIGN KEY ("USER_ID") REFERENCES "Passenger"("CANCEL_ID") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Cancel" ADD CONSTRAINT "Cancel_DRIVER_ID_fkey" FOREIGN KEY ("DRIVER_ID") REFERENCES "Driver"("CANCEL_ID") ON DELETE RESTRICT ON UPDATE CASCADE;

-- AddForeignKey
ALTER TABLE "Cancel" ADD CONSTRAINT "Cancel_REQ_ID_fkey" FOREIGN KEY ("REQ_ID") REFERENCES "Request"("CANCEL_ID") ON DELETE RESTRICT ON UPDATE CASCADE;
